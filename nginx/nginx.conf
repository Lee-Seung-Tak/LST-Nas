server {
    listen 80;
    server_name test.com;  # 실제 도메인으로 변경하세요.

    # Let's Encrypt 인증서를 위한 HTTP-01 챌린지
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;  # Certbot의 웹 루트 디렉토리
    }

    # HTTP 요청을 HTTPS로 리디렉션
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name test.com;  # 실제 도메인으로 변경하세요.

    ssl_certificate /etc/letsencrypt/live/test.com/fullchain.pem;  # Certbot 인증서 경로
    ssl_certificate_key /etc/letsencrypt/live/test.com/privkey.pem;  # Certbot 키 파일 경로
    ssl_trusted_certificate /etc/letsencrypt/live/test.com/chain.pem;  # 인증서 체인

    # SSL 설정 최적화
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;

    location /api/v1/ {
        proxy_pass http://host.docker.internal:8008/;  # 호스트의 8008 포트로 프록시
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /docs {
        proxy_pass http://host.docker.internal:8008/docs;
    }

    location /redoc {
        proxy_pass http://host.docker.internal:8008/redoc;
    }

    location / {
        proxy_pass http://host.docker.internal:8000/;  # 호스트의 8008 포트로 프록시
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    location /api/ {
        proxy_pass http://host.docker.internal:8000/api/;  # 호스트의 8008 포트로 프록시
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    location = /favicon.ico {
        access_log off;
        log_not_found off;
        return 204;
    }
}
